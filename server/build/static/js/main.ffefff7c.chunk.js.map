{"version":3,"sources":["assets/img/welcome-image.JPG","components/post-card.jsx","components/home.jsx","components/general/navbar.jsx","components/general/footer.jsx","components/not-found.jsx","components/login.jsx","components/cp.jsx","components/all-posts.jsx","components/log-out-confirmation.jsx","components/Post.jsx","components/NewPost.jsx","components/PostCreated.jsx","components/general/LoadingOverlay.jsx","components/general/ProtectedRoute.jsx","components/general/LostConn.jsx","components/general/FatalError.jsx","components/EditPost.jsx","components/AllUsers.jsx","components/NewUser.jsx","components/EditUser.jsx","components/general/AuthorCard.jsx","components/AllAuthors.jsx","components/UserPage.jsx","components/ChangePass.jsx","components/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","PostCard","props","className","title","author","name","moment","createdAt","format","resume","to","_id","type","tags","map","tag","Home","useState","isLoading","setLoading","posts","setPosts","useEffect","axios","url","method","then","res","data","sort","a","b","dateA","unix","catch","err","setIsConnected","style","backgroundImage","welcomeImage","Spinner","animation","role","post","key","Navigation","isLoggedIn","setLoggedIn","withCredentials","status","response","Navbar","bg","variant","expand","Brand","as","Link","Toggle","aria-controls","Container","Collapse","id","Nav","Footer","NotFound","backgroundColor","color","Login","history","useHistory","React","input","setInput","loading","badPass","setBadPass","handleInput","e","console","log","currentTarget","value","Alert","onChange","disabled","username","password","onClick","push","Cp","AllPosts","useMemo","cols","header","accessor","Cell","cell","tableInstance","useTable","columns","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getTableBodyProps","rows","row","prepareRow","getRowProps","cells","getCellProps","LogoutConf","htmlToReactParser","HtmlToReactParser","HTMLToReact","Parser","Post","setPost","useParams","params","timeout","setCrashed","parse","html","NewPost","md","newPost","setNewPost","handleUserInput","ev","defaultValue","setLoadingOverlay","PostCreated","width","fontSize","LoadingOverlay","onclick","height","ProtectedRoute","Component","rest","LostConn","FatalError","Button","window","location","reload","EditPost","archived","AllUsers","users","setUsers","NewUser","errorRef","useRef","email","admin","bio","user","setUser","isInvalid","setInvalid","iserr","msg","error","setError","lowerCaseEmail","toLowerCase","test","ref","request","message","scrollTo","current","offsetTop","EditUser","isSaved","setSaved","AuthorCard","AllAuthors","authors","setAuthors","UserPage","href","ChangePass","isValid","setValid","isSuccess","setSuccess","oldPassword","newPassword","setData","closeModal","close","Modal","show","Header","data-dismiss","aria-label","aria-hidden","Body","placeholder","HelpIcon","mainProps","OverlayTrigger","placement","delay","hide","overlay","Tooltip","text","ProfileSubmenu","menu","startChangePass","ProfilePage","isFailed","setFailed","isSubmitting","setSubmitting","passwordModal","setPasswordModal","openMenu","setOpenMenu","navClicked","Card","activeKey","Item","eventKey","App","isConnected","isCrashed","isLoadingOverlay","exact","path","Profile","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffefff7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/welcome-image.b16e172c.JPG\";","import React, {useState} from 'react'\nimport moment from 'moment'\nimport axios from 'axios'\nimport {Spinner} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nfunction PostCard(props) {\n    return (<div className=\"post-card\">\n        <div className=\"container\">\n            <div className=\"row post-subtitle\">\n                <div className=\"col-lg-8 align-content-center justify-content-center align-items-center d-flex\">\n            <h2 className=\"post-title\">{props.title}</h2>\n                </div>\n                <div className=\"col\">\n                    <div className=\"row h-100\">\n                        <div className=\"col d-flex justify-content-center align-items-center\">\n                            <h5>Posted by {props.author && props.author.name} on {moment(props.createdAt).format(\"dddd MMMM D yyyy\")}</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"container\">\n            <div className=\"post-preview\">\n                <p className=\"resume\"><strong>{props.resume}.</strong></p>\n                <Link to={`/posts/${props._id}`}><div className=\"d-flex justify-content-center\"><button className=\"btn btn-primary w-100 read-btn\" type=\"button\">Read</button></div></Link>\n                <p className=\"tag-block\"><strong>Tags:&nbsp;</strong> {props.tags && props.tags.map(tag => {\n                            return(<span className=\"badge badge-primary tag-badge\">{tag}</span>)\n                        })}\n                </p>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default PostCard","import React, {useEffect, useState} from 'react'\nimport PostCard from './post-card'\n\n/* Stylesheets */\n\nimport '../assets/css/cp.css'\nimport '../assets/bootstrap/css/bootstrap.min.css'\nimport '../assets/css/main.css'\nimport '../assets/css/new-post.css'\nimport '../assets/css/post.css'\nimport '../assets/css/user-accounts.css'\nimport welcomeImage from '../assets/img/welcome-image.JPG'\nimport '../assets/fonts/font-awesome.min.css'\nimport axios from 'axios';\nimport {Spinner} from 'react-bootstrap'\nimport moment from 'moment'\n\nfunction Home(props) {\n    let [isLoading, setLoading] = useState(true);\n    let [posts, setPosts] = useState([{}]);\n    useEffect(() => {\n      axios({\n        url: \"/posts/view\",\n        method: \"get\"\n      }).then(res => {\n        setLoading(false);\n        // Sort the posts\n        res.data.sort((a, b) => {\n          let dateA = moment(a.createdAt).unix();\n          let dateB = moment(b.createdAt).unix();\n          return dateB-dateA;\n        })\n        setPosts(res.data);\n      }).catch(err => {\n        props.setIsConnected(false)\n        throw err;\n      });\n    },[])\n    return (<>\n    <div>\n            <header className=\"masthead\" style={{ backgroundImage: \"url(\" + welcomeImage + \")\"}}>\n    <div className=\"overlay\" />\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-lg-8 mx-auto\">\n          <div className=\"site-heading\">\n            <h1>B. Log</h1><span className=\"subheading\">The Best Blog</span></div>\n        </div>\n      </div>\n    </div>\n  </header>\n        {isLoading ? <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner> : posts.map(post => {\n          return (<PostCard key={post._id} {...post}></PostCard>)\n        })}\n    </div>\n        </>)\n}\n\nexport default Home","import React, { useState } from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from \"axios\"\nimport {Container, Navbar, Nav} from 'react-bootstrap'\n\nfunction Navigation(props) {\n    let {isLoggedIn, setLoggedIn} = props;\n    if (isLoggedIn == null) {\n        axios({\n            method: \"get\",\n            url: \"/auth/isloggedin\",\n            withCredentials: true\n        }).then(res => {\n            if (res.status == 200) {\n                setLoggedIn(true)\n            }\n        }).catch(err => {\n            if (err.response.status == 401) {\n                setLoggedIn(false);\n            }\n        })\n    }\n    return (<Navbar className=\"justify-content-between\" bg=\"light\" variant=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">\n            B. Log\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Container>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                    <Nav.Link as={Link} className=\"nav-link\" to=\"/users/view\">Our Authors</Nav.Link>\n                    {isLoggedIn ? <Nav.Link as={Link} to=\"/cp\">Control Panel</Nav.Link> : null}\n                </Nav>\n                {isLoggedIn ? <Nav.Link className=\"btn btn-primary nav-button-primary\" as={Link} to=\"/users/me\">Profile</Nav.Link> : null}\n                <Nav.Link as={Link} className=\"btn btn-primary nav-button-primary\" to={`/${isLoggedIn ? \"logout\" : \"login\"}`}>{isLoggedIn ? \"Log Out\" : \"Log In\"}</Nav.Link>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n    )\n}\n\nexport default Navigation","import React from \"react\"\n\nfunction Footer() {\n    return (<footer>\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-md-10 col-lg-8 mx-auto\">\n        <ul className=\"list-inline text-center\">\n          <li className=\"list-inline-item\"><span className=\"fa-stack fa-lg\"><i className=\"fa fa-circle fa-stack-2x\" /><i className=\"fa fa-twitter fa-stack-1x fa-inverse\" /></span></li>\n          <li className=\"list-inline-item\"><span className=\"fa-stack fa-lg\"><i className=\"fa fa-circle fa-stack-2x\" /><i className=\"fa fa-facebook fa-stack-1x fa-inverse\" /></span></li>\n          <li className=\"list-inline-item\"><span className=\"fa-stack fa-lg\"><i className=\"fa fa-circle fa-stack-2x\" /><i className=\"fa fa-github fa-stack-1x fa-inverse\" /></span></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</footer>\n)\n}\n\nexport default Footer","import React from 'react'\nfunction NotFound() {\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Page Not Found</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    <p>The URL you have requested could not be found on this server. Please try another address.</p>\n                </div>\n            </div>\n        </div>\n    </div>)\n}\nexport default NotFound","import React from 'react'\nimport axios from 'axios'\n\nimport {Spinner, Alert} from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\nfunction Login(props) {\n    let history = useHistory();\n    let [input, setInput] = React.useState({})\n    let [loading, setLoading] = React.useState(false)\n    let [badPass, setBadPass] = React.useState(false)\n    let {isLoggedIn, setLoggedIn} = props;\n    function handleInput(e) {\n        console.log(e.currentTarget.name)\n        console.log(e.currentTarget.value)\n        setInput({\n            ...input,\n            [e.currentTarget.name]: e.currentTarget.value\n        })\n    }\n    function logIn() {\n        setLoading(true);\n        axios({\n            method: \"post\",\n            url: \"/auth/login\",\n            data: {\n                username: input.username,\n                password: input.password\n            }\n        }).then(res => {\n            setLoading(false);\n            setLoggedIn(true);\n            history.push(\"/cp\")\n        }).catch(err => {\n            if (err.response.status == 401) {\n                setBadPass(true);\n            }\n            setLoading(false)\n        })\n    }\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Log In</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            {badPass ? <Alert variant=\"danger\" className=\"d-flex justify-content-center\">The Password you have entered is Incorrect</Alert> : null}\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    <div className=\"form-entry\">\n                        <h1>Username</h1><input onChange={handleInput} disabled={loading} name=\"username\" value={input.username} type=\"text\" className=\"new-post-in\" /></div>\n                    <div className=\"form-entry\">\n                        <h1>Password</h1><input onChange={handleInput} disabled={loading} value={input.password} name=\"password\" type=\"password\" className=\"new-post-in\" /></div>\n                    <div className=\"d-flex justify-content-center\"><button onClick={logIn} disabled={loading} className=\"btn btn-primary d-inline-block w-100\" type=\"button\">{loading ? <Spinner animation=\"border\" role=\"status\"> <span className=\"sr-only\">Loading...</span> </Spinner> : \"Log In\"}</button></div>\n                </div>\n            </div>\n        </div>\n    </div>)\n}\nexport default Login","import React from 'react'\nimport {Link} from 'react-router-dom'\nfunction Cp(props) {\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Admin Panel</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    <Link to=\"/posts/all\"><button className=\"btn btn-primary cp-btn\" type=\"button\">View Your Posts</button></Link>\n                    <Link to=\"/logout\"><button className=\"btn btn-primary cp-btn\" type=\"button\">Log Out</button></Link>\n                </div>\n                <div className=\"col\">\n                    <Link to=\"/users/all\"><button className=\"btn btn-primary cp-btn\" type=\"button\">Manage User Accounts</button></Link>\n                </div>\n            </div>\n        </div>\n    </div>)}\nexport default Cp\n","import React, {useMemo, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport {useTable} from 'react-table'\nimport { useEffect } from 'react';\nimport moment from 'moment'\n\nfunction AllPosts() {\n\n    let [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: \"/posts/all\"\n        }).then(res => {\n            setPosts(res.data)\n        }).catch(err => {\n            throw err\n        });\n    },[])\n\n    let data = useMemo(() => {\n        return posts\n    },[posts])\n    const cols = useMemo(() => {\n        return ([\n            {\n                header: 'Date',\n                accessor: 'createdAt',\n                Cell: ({ cell: { value } }) => moment(value).format(\"MMMM Do YYYY\")\n            },\n            {\n                header: 'Title',\n                accessor: 'title'\n            },\n            {\n                header: 'Action',\n                accessor: '_id',\n                Cell: ({ cell: { value } }) => <Link to={`/posts/edit/${value}`} className=\"btn btn-primary\"><i className=\"fa fa-pencil-square-o\" />Edit</Link>\n            }\n        ])\n    },[]);\n    const tableInstance = useTable({\n        columns: cols,\n        data: data\n    })\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>View your posts</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-10 col-lg-8 mx-auto\">\n                    <div className=\"row d-flex jusify-content-center\">\n                        <div className=\"col w-100\">\n                            <div className=\"btn-group d-inline d-flex edit-btns\" role=\"group\">\n                                <Link to=\"/posts/new\" className=\"btn btn-primary\"><i className=\"fa fa-plus\" />New</Link></div>\n                        </div>\n                    </div>\n                    <div className=\"table-responsive\">\n                        <table className=\"table\" {...tableInstance.getTableProps()}>\n                            <thead>\n                                {tableInstance.headerGroups.map(headerGroup => {\n                                    return (<tr {...headerGroup.getHeaderGroupProps()}>\n                                        {headerGroup.headers.map(header => {\n                                            return (<th {...header.getHeaderProps()}>{header.render('header')}</th>)\n                                        })}\n                                    </tr>)\n                                })}\n                            </thead>\n                            <tbody {...tableInstance.getTableBodyProps()}>\n                                {tableInstance.rows.map(row => {\n                                    tableInstance.prepareRow(row);\n                                    return(<tr {...row.getRowProps()}>\n                                        {row.cells.map(cell => (\n                                            <td {...cell.getCellProps()}>{\n                                                cell.render('Cell')\n                                            }</td>\n                                        ))}\n                                    </tr>)\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"clearfix\" />\n                <div className=\"clearfix\" />\n            </div>\n        </div>\n    </div>)\n}\n\nexport default AllPosts","import React from 'react'\nimport axios from 'axios'\nimport {Link, useHistory} from 'react-router-dom'\n\nfunction LogoutConf(props) {\n    let history = useHistory();\n    function handleLogout() {\n        axios({\n            method: \"get\",\n            url: \"/auth/logout\",\n        }).then(res => {\n            props.setLoggedIn(false);\n            history.push(\"/\")\n        }).catch(err => {\n            throw err;\n        })\n    }\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Are you sure you want to log out?</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\"><button onClick={handleLogout} className=\"btn btn-danger cp-btn\" type=\"button\">Log Out</button></div>\n                <div className=\"col\"><Link to=\"/\"><button className=\"btn btn-primary cp-btn\" type=\"button\">Cancel</button></Link></div>\n            </div>\n        </div>\n    </div>)\n}\nexport default LogoutConf","import React, {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from 'axios'\nimport HTMLToReact from 'html-to-react'\nimport moment from 'moment'\nimport {Spinner} from 'react-bootstrap'\nimport '../assets/css/post-markup.css'\nlet HtmlToReactParser = HTMLToReact.Parser;\nlet htmlToReactParser = new HtmlToReactParser();\n\nfunction Post(props) {\n    let [isLoading, setLoading] = useState(true);\n    let [post, setPost] = useState({});\n    let {id} = useParams();\n    \n    useEffect(() => {\n        axios({\n            method: 'get',\n            url: '/posts/view/all',\n            params: {\n                _id: id\n            },\n            timeout: 1000\n        }).then(res => {\n            setPost(res.data);\n            setLoading(false);\n        }).catch(err => {\n            props.setCrashed(true)\n            throw err;\n        })\n    })\n    return (<div>\n        <header className=\"masthead\">\n            <div className=\"overlay\" />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-10 col-lg-8 mx-auto\">\n                        <div className=\"post-heading\">\n                            {isLoading ? <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner> : <><h1>{post && post.title}</h1><span className=\"post-info\">Posted by <strong>{post.author && post.author.name}</strong>&nbsp;on <strong>{post && moment(post.createdAt).format('dddd MMMM DD YYYY')}</strong></span></>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n        <article>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-10 col-lg-8 mx-auto post-content\">\n                        {isLoading ? <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner> : <>{post && htmlToReactParser.parse(post.html)}</>}\n                    </div>\n                </div>\n            </div>\n        </article>\n    </div>)\n}\n\nexport default Post;\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Spinner} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'  \n\nimport '../assets/css/loading-icons.css'\n\nimport TagsInput from 'react-tagsinput'\n\n// import 'react-tagsinput/react-tagsinput.css'\nimport '../assets/css/tag-input.css'\n\nfunction NewPost(props) {\n    let history = useHistory();\n    let [newPost, setNewPost] = useState({\n        title: '',\n        md: '',\n        tags: [],\n        resume: ''\n    });\n    let [isLoading, setLoading] = useState(false)\n    function handleUserInput(ev) {\n        setNewPost({\n            ...newPost,\n            [ev.currentTarget.name]: ev.currentTarget.value\n        });\n    } \n    function handleTagsChange(tags) {\n        setNewPost({\n            ...newPost,\n            tags: tags\n        })\n    }\n    function handleNewPost() {\n        setLoading(true);\n        props.setLoadingOverlay(true);\n        axios({\n            method: \"post\",\n            url:\"/posts/new\",\n            data: newPost\n        }).then(res => {\n            props.setLoadingOverlay(false);\n            setLoading(false);\n            history.push(\"/posts/created\");\n        }).catch(err => {\n            props.setLoadingOverlay(false);\n            setLoading(false)\n            console.log(err);\n        })\n    }\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: \"/users/all\"\n        }).then(res => {\n            setLoading(false)\n            if (res.data) {\n                /**\n                 * Prevents empty array from\n                 * causing crash\n                 */\n                setNewPost({\n                    ...newPost,\n                    author: res.data[0]\n                })\n            }\n        }).catch(err => {\n            throw err;\n        })\n    }, [])\n    return (<div><header>\n        <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n            <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Create a New Post</h1>\n        </div>\n    </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    <div className=\"form-entry\">\n                        <h1>Title</h1><input type=\"text\" value={newPost.title} name=\"title\" onChange={handleUserInput} className=\"new-post-in\" /></div>\n                    <div className=\"form-entry\">\n                        <h1>Enter Markdown</h1><textarea className=\"md-text\" defaultValue={newPost.md} name=\"md\" onChange={handleUserInput} /></div>\n                    <div className=\"form-entry\">\n                        <h1>Resume</h1><textarea className=\"md-text\" defaultValue={newPost.resume} name=\"resume\" onChange={handleUserInput} /></div>\n                    <div className=\"form-entry\">\n                        <h1>Tags</h1>\n                        <TagsInput value={newPost.tags} onChange={handleTagsChange}></TagsInput>\n                    </div>\n                    <div className=\"d-flex justify-content-end\"><button className=\"btn btn-primary d-inline-block\" type=\"button\" onClick={handleNewPost}>Create</button></div>\n                </div>\n            </div>\n        </div>\n    </div>)}\n\nexport default NewPost;\n    ","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction PostCreated() {\n    return (<><header>\n    <div className=\"jumbotron\" style={{backgroundColor: 'rgb(63,108,118)'}}>\n      <h1 className=\"text-center\" style={{color: '#FFFFFF'}}>Success!</h1>\n      <div className=\"text-center\"><i className=\"fa fa-check-circle-o\" style={{width: 'auto', fontSize: 80, color: 'white'}} /></div>\n    </div>\n  </header>\n  <div className=\"container\">\n    <p>Your post was successfully created. You may now safely go to another page.</p>\n    <div className=\"row\">\n      <div className=\"clearfix\" />\n      <div className=\"col\">\n          <Link to=\"/posts/new\" className=\"btn btn-primary cp-btn\" type=\"button\">Create another post</Link>\n          <Link to=\"/\" className=\"btn btn-primary cp-btn\" type=\"button\">Go Home</Link>\n      </div>\n      <div className=\"col\"><Link to=\"/cp\" className=\"btn btn-primary cp-btn\" type=\"button\">Back To Control Panel</Link></div>\n    </div>\n  </div></>)\n}\n\nexport default PostCreated","import React from 'react'\nimport {Spinner} from 'react-bootstrap'\n\nfunction LoadingOverlay() {\n    return (<div id=\"loading-overlay\" onclick=\"off()\">\n        <div className=\"w-100 d-flex justify-content-center align-items-center\">\n            <Spinner style={{ width: \"100px\", height: \"100px\" }} animation=\"grow\" role=\"status\" variant=\"info\"></Spinner>\n            <div>\n                <p className=\"loading-text\">Please Wait...</p>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default LoadingOverlay","import React from 'react'\nimport {Route, Redirect, useHistory} from 'react-router-dom'\n\n/**\n * Prevents the user from accessing routes\n * if they do not have the authentication to do\n * so.\n */\n\nfunction ProtectedRoute({render: Component, isLoggedIn, ...rest}) {\n    let history = useHistory();\n    // return (<Component></Component>)\n    return (isLoggedIn ? <Route {...rest} render={(props) => {\n       return (<Component {...props} />)\n    }} /> : <Redirect to=\"/\" />)\n}\n\nexport default ProtectedRoute","import React from 'react'\n\nfunction LostConn() {\n    return (<div className=\"conn-lost-overlay d-flex align-items-center text-center justify-content-center\">\n        <div className=\"text-center\">\n            <h1>Connection Lost</h1><i className=\"fa fa-warning\" style={{ fontSize: 89 }} />\n            <p className=\"text-center\">Check your internet connection and try again</p>\n        </div>\n    </div>)\n}\n\nexport default LostConn;","import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\n\nfunction FatalError(props) {\n    let history = useHistory();\n    let goHome = () => {\n        props.setCrashed(false);\n        history.push(\"/\");\n    }\n    return (<div className=\"conn-lost-overlay d-flex align-items-center text-center justify-content-center\" style={{ backgroundColor: '#dc3545' }}>\n        <div className=\"text-center\">\n            <h1>Fatal Error</h1>\n            <i className=\"fa fa-chain-broken\" style={{ fontSize: 89 }} />\n            <p className=\"text-center\">A fatal Error has occured. Please try reloading the page or try again later.</p>\n            <Button onClick={() => {window.location.reload();}} variant=\"light\">Reload</Button>\n            <Button onClick={goHome} variant=\"light\">Home</Button>\n        </div>\n    </div>)\n}\n\nexport default FatalError;","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useHistory, useParams, Link} from 'react-router-dom'  \nimport {Button} from 'react-bootstrap'\n\nimport '../assets/css/loading-icons.css'\n\nimport TagsInput from 'react-tagsinput'\n\n// import 'react-tagsinput/react-tagsinput.css'\nimport '../assets/css/tag-input.css'\n\nfunction EditPost(props) {\n    let {id} = useParams();\n    let history = useHistory();\n    let [post, setPost] = useState({});\n    let [isLoading, setLoading] = useState(true);\n    function handleUserInput(ev) {\n        setPost({\n            ...post,\n            [ev.currentTarget.name]: ev.currentTarget.value\n        });\n    } \n    function handleTagsChange(tags) {\n        setPost({\n            ...post,\n            tags: tags\n        })\n    }\n    let saveChanges = () => {\n        props.setLoadingOverlay(true)\n        axios({\n            method: \"put\",\n            url: \"/posts/edit\",\n            data: post\n        }).then(res => {\n            props.setLoadingOverlay(false)\n        }).catch(err => {\n            throw err;\n        })\n    }\n    let archive = () => {\n        props.setLoadingOverlay(true);\n        axios({\n            method: \"put\",\n            url: \"/posts/archive\",\n            data: {_id: post._id}\n        }).then(res => {\n            props.setLoadingOverlay(false);\n            setPost({\n                ...post,\n                archived: true\n            });\n        }).catch(err => {\n            throw err;\n        })\n    }\n    let unarchive = () => {\n        props.setLoadingOverlay(true);\n        axios({\n            method: \"put\",\n            url: \"/posts/unarchive\",\n            data: {_id: post._id}\n        }).then(res => {\n            props.setLoadingOverlay(false);\n            setPost({\n                ...post,\n                archived: false\n            });\n        }).catch(err => {throw err})\n    }\n    useEffect(() => {\n        props.setLoadingOverlay(true);\n        axios({\n            url: \"/posts/view/all\",\n            method: \"get\",\n            params: {\n                _id: id\n            }\n        }).then(res => {\n            setPost(res.data);\n            props.setLoadingOverlay(false);\n            setLoading(false);\n        }).catch(err => {\n            throw err;\n        })\n    },[])\n    return (<div><header>\n        <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n            <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Edit Post</h1>\n        </div>\n    </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    <div className=\"form-entry\">\n                        <h1>Title</h1><input type=\"text\" value={post.title} name=\"title\" onChange={handleUserInput} className=\"new-post-in\" /></div>\n                    <div className=\"form-entry\">\n                        <h1>Enter Markdown</h1><textarea className=\"md-text\" defaultValue={post.md} name=\"md\" onChange={handleUserInput} /></div>\n                    <div className=\"form-entry\">\n                        <h1>Resume</h1><textarea className=\"md-text\" defaultValue={post.resume} name=\"resume\" onChange={handleUserInput} /></div>\n                    <div className=\"form-entry\">\n                        <h1>Tags</h1>\n                        {isLoading ? null : <TagsInput value={post.tags} onChange={handleTagsChange}></TagsInput>}\n                    </div>\n                    <div role=\"group\" className=\"btn-group d-flex\">\n                        <Link to=\"/posts/all\" as={Button} className=\"btn btn-primary\" type=\"button\">Return</Link>\n                        {post.archived ? <Button variant=\"primary\" onClick={unarchive}>Unarchive</Button> : <Button variant=\"danger\" onClick={archive}>Archive</Button>}\n                        <Button variant=\"success\" onClick={saveChanges}>Save Changes</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>)}\n\nexport default EditPost;\n    ","import React, {useMemo, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport {useTable} from 'react-table'\nimport { useEffect } from 'react';\n\nfunction AllUsers() {\n\n    let [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: \"/users/all\"\n        }).then(res => {\n            setUsers(res.data)\n        }).catch(err => {\n            throw err\n        });\n    },[])\n\n    let data = useMemo(() => {\n        return users\n    },[users])\n    const cols = useMemo(() => {\n        return ([\n            {\n                header: 'Name',\n                accessor: 'name'\n            },\n            {\n                header: 'Action',\n                accessor: '_id',\n                Cell: ({ cell: { value } }) => <Link to={`/users/edit/${value}`} className=\"btn btn-primary\"><i className=\"fa fa-pencil-square-o\" />Edit</Link>\n            }\n        ])\n    },[]);\n    const tableInstance = useTable({\n        columns: cols,\n        data: data\n    })\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>View all Users</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-10 col-lg-8 mx-auto\">\n                    <div className=\"row d-flex jusify-content-center\">\n                        <div className=\"col w-100\">\n                            <div className=\"btn-group d-inline d-flex edit-btns\" role=\"group\">\n                                <Link to=\"/users/new\" className=\"btn btn-primary\"><i className=\"fa fa-plus\" />New</Link></div>\n                        </div>\n                    </div>\n                    <div className=\"table-responsive\">\n                        <table className=\"table\" {...tableInstance.getTableProps()}>\n                            <thead>\n                                {tableInstance.headerGroups.map(headerGroup => {\n                                    return (<tr {...headerGroup.getHeaderGroupProps()}>\n                                        {headerGroup.headers.map(header => {\n                                            return (<th {...header.getHeaderProps()}>{header.render('header')}</th>)\n                                        })}\n                                    </tr>)\n                                })}\n                            </thead>\n                            <tbody {...tableInstance.getTableBodyProps()}>\n                                {tableInstance.rows.map(row => {\n                                    tableInstance.prepareRow(row);\n                                    return(<tr {...row.getRowProps()}>\n                                        {row.cells.map(cell => (\n                                            <td {...cell.getCellProps()}>{\n                                                cell.render('Cell')\n                                            }</td>\n                                        ))}\n                                    </tr>)\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"clearfix\" />\n                <div className=\"clearfix\" />\n            </div>\n        </div>\n    </div>)\n}\n\nexport default AllUsers","import React, {useState, useEffect, useRef} from 'react'\nimport {Button, Alert, Spinner} from 'react-bootstrap'\nimport axios from 'axios'\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop) \n\nlet NewUser = props => {\n    let errorRef = useRef(null)\n    useEffect(() => {\n        console.log('Hello World');\n        return () => {\n            console.log('Do some cleanup');\n        }\n    }, [])\n    let [user, setUser] = useState({\n        username: '',\n        password: '',\n        name: '',\n        email: '',\n        admin: false,\n        bio: ''\n    })\n    let [isInvalid, setInvalid] = useState(false)\n    let [error, setError] = useState({\n        iserr: false,\n        msg: ''\n    })\n    let [isLoading, setLoading] = useState(false);\n    let handleUserInput = ev => {\n        setUser({\n            ...user,\n            [ev.currentTarget.name]: ev.currentTarget.value\n        });\n        let emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n        let lowerCaseEmail = user.email.toLowerCase();\n        setInvalid(\n            !emailRegex.test(lowerCaseEmail) ||\n            !user.username ||\n            !user.password ||\n            !user.name ||\n            !user.email ||\n            !user.bio\n        )\n    }\n    let createUser = () => {\n        setLoading(true)\n        axios({\n            url: \"/users/new\",\n            method: \"post\",\n            data: user\n        }).then(res => {\n            setLoading(false);\n        }).catch(err => {\n            if (err.request.status == 400) {\n                // Validation error. Display the warning message\n                setError({\n                    ...error,\n                    msg: err.response.data.message,\n                    iserr: true\n                })\n                setLoading(false)\n                scrollToRef(errorRef)\n            }\n        });\n    }\n    return (<>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Create a New User</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    {isInvalid ? <Alert variant=\"danger\">\n                        <h1>Error</h1>\n                        One or more of the fields below has been filled out incorrectly. Please\n                        correct this mistake and try again.\n                    </Alert> : null}\n                    {error.iserr ? <Alert ref={errorRef} variant=\"warning\">\n                        <h1>Unable to Create User</h1>\n                        {error.msg}\n                    </Alert> : null}\n                    <div className=\"form-entry\">\n                        <h1>Full Name</h1><input name=\"name\" value={user.name} onChange={handleUserInput} type=\"text\" className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Username</h1><input name=\"username\" value={user.username} onChange={handleUserInput} type=\"text\" className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Email</h1><input name=\"email\" value={user.email} onChange={handleUserInput} type=\"text\" className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Enter Bio</h1>\n                        <p>(supports Markdown)</p>\n                        <textarea className=\"md-text\" name=\"bio\" defaultValue={user.bio} onChange={handleUserInput} />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Password</h1><input type=\"text\" name=\"password\" value={user.password} onChange={handleUserInput} className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Permission</h1>\n                        <select name=\"admin\" value={user.admin} onChange={handleUserInput}>\n                            <option value={false}>Regular</option>\n                            <option value={true}>Admin</option>\n                        </select>\n                    </div>\n                    <div className=\"d-flex\"><Button onClick={createUser} disabled={isInvalid || isLoading} variant=\"primary\" className=\"w-100 create-user-btn\">{isLoading ? <Spinner animation=\"border\" role=\"status\"></Spinner> : <>Create <i className=\"fa fa-check\" /></>}</Button></div>\n                </div>\n            </div>\n        </div>\n    </>)\n}\n\nexport default NewUser\n","import React, {useState, useEffect} from 'react'\nimport {Button, Alert, Spinner} from 'react-bootstrap'\nimport axios from 'axios'\nimport {useParams} from 'react-router-dom'\n\nlet EditUser = props => {\n    let {id} = useParams();\n    useEffect(() => {\n        axios({\n            url: \"/users/view\",\n            params: {\n                _id: id\n            }\n        }).then(res => {\n            if (!res.data) {\n                // No user found\n            }\n            // Only need md of bio\n            res.data.bio = res.data.bio.md\n            setUser({\n                user, ...res.data\n            })\n        })\n    }, [])\n    let [user, setUser] = useState({\n        username: '',\n        password: '',\n        name: '',\n        email: '',\n        admin: false,\n        bio: ''\n    })\n    let [isInvalid, setInvalid] = useState(false)\n    let [error, setError] = useState({\n        iserr: false,\n        msg: ''\n    })\n    let [isSaved, setSaved] = useState(false)\n    let [isLoading, setLoading] = useState(false);\n    let handleUserInput = ev => {\n        setUser({\n            ...user,\n            [ev.currentTarget.name]: ev.currentTarget.value\n        });\n        let emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n        let lowerCaseEmail = user.email.toLowerCase();\n        setInvalid(\n            !emailRegex.test(lowerCaseEmail) ||\n            !user.username ||\n            !user.name ||\n            !user.email ||\n            !user.bio\n        )\n    }\n    let saveChanges = () => {\n        setLoading(true)\n        axios({\n            url: \"/users/edit\",\n            method: \"put\",\n            data: user\n        }).then(res => {\n            setLoading(false);\n            setSaved(true);\n        }).catch(err => {\n            setLoading(false);\n            setSaved(false);\n            setError({\n                ...error,\n                iserr: true\n            });\n        });\n    }\n    return (<>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Edit a User</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"clearfix\" />\n                <div className=\"col\">\n                    {isInvalid ? <Alert variant=\"danger\">\n                        <h1>Error</h1>\n                        One or more of the fields below has been filled out incorrectly. Please\n                        correct this mistake and try again.\n                    </Alert> : null}\n                    <div className=\"form-entry\">\n                        <h1>Full Name</h1><input name=\"name\" value={user.name} onChange={handleUserInput} type=\"text\" className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Username</h1><input name=\"username\" value={user.username} onChange={handleUserInput} type=\"text\" className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Email</h1><input name=\"email\" value={user.email} onChange={handleUserInput} type=\"text\" className=\"new-post-in\" />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Enter Bio</h1>\n                        <p>(supports Markdown)</p>\n                        <textarea className=\"md-text\" name=\"bio\" defaultValue={user.bio} onChange={handleUserInput} />\n                    </div>\n                    <div className=\"form-entry\">\n                        <h1>Permission</h1>\n                        <select name=\"admin\" value={user.admin} onChange={handleUserInput}>\n                            <option value={false}>Regular</option>\n                            <option value={true}>Admin</option>\n                        </select>\n                    </div>\n                    {isSaved ? <Alert variant=\"success\">\n                        <h1>Saved!</h1>\n                        <p>Your changes have been saved!</p>\n                    </Alert> : error.iserr ? <Alert variant=\"warning\">\n                        <h1>Unable to Save User</h1>\n                        <p>Your changes could not be saved.</p>\n                    </Alert> : null}\n                    <div className=\"d-flex\"><Button onClick={saveChanges} disabled={isInvalid || isLoading} variant=\"primary\" className=\"w-100 create-user-btn\">{isLoading ? <Spinner animation=\"border\" role=\"status\"></Spinner> : <> Save Changes <i className=\"fa fa-check\" /></>}</Button></div>\n                </div>\n            </div>\n        </div>\n    </>)\n}\n\nexport default EditUser\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\n\nlet AuthorCard = props => {\n    return (<div className=\"card author-card\">\n        <div className=\"card-body\">\n        <h4 className=\"card-title\">{props.name}</h4><Button as={Link} to={`/users/${props._id}`} className=\"w-100\">Meet Me</Button>\n        </div>\n    </div>)\n}\n\nexport default AuthorCard;","import React, {useState, useEffect} from 'react'\nimport AuthorCard from './general/AuthorCard'\nimport axios from 'axios'\nimport {Spinner} from 'react-bootstrap'\n\nlet AllAuthors = () => {\n    let [authors, setAuthors] = useState([]);\n    let [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        axios({\n            url: \"/users/all\",\n            method: \"get\"\n        }).then(res => {\n            setLoading(false);\n            setAuthors(res.data)\n        }).catch(err => {\n            setLoading(false);\n            throw err;\n        })\n    },[])\n        return (<>\n        <header>\n            <div className=\"jumbotron\" style={{backgroundColor: 'rgb(63,108,118)'}}>\n                <h1 className=\"text-center\" style={{color: '#FFFFFF'}}>Our Authors</h1>\n            </div>\n        </header>\n        <div className=\"container authors-container\" style={{height: 'auto'}}>\n            {isLoading ? <div className=\"d-flex justify-content-center w-100\"><Spinner animation=\"border\"></Spinner></div> : authors.map(author => {\n                return (<AuthorCard key={author._id} {...author}/>)\n            })}\n        </div>\n    </>)\n}\n\nexport default AllAuthors;\n","import React, {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from 'axios'\nimport HTMLToReact from 'html-to-react'\nimport { Spinner } from 'react-bootstrap' \nlet htmlToReactParser = new HTMLToReact.Parser();\n\nlet UserPage = props => {\n    let [user, setUser] = useState({});\n    let [isLoading, setLoading] = useState(true)\n    let { id } = useParams();\n    useEffect(() => {\n        axios({\n            url: \"/users/view\",\n            method: \"get\",\n            params: {id}\n        }).then(res => {\n            res.data.bio = res.data.bio.html // We don't care about the md\n            setUser(res.data);\n            setLoading(false);\n        }).catch(err => {\n            throw err;\n        })\n    }, [id])\n    return (<div>\n        {\n            isLoading ? <Spinner animation=\"border\"></Spinner> : <><header>\n                <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                    <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>{user.name}</h1>\n                </div>\n            </header><div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-lg-4\">\n                                <div className=\"card contact-card\">\n                                    <div className=\"card-header\">\n                                        <h5 className=\"mb-0\"><strong>Contact Me</strong></h5>\n                                    </div>\n                                    <div className=\"card-body\"><a className=\"card-link\" href=\"#\">{user.email}</a></div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 col-lg-10 col-xl-7 author-bio\">\n                                {user && htmlToReactParser.parse(user.bio)}\n                            </div>\n                        </div>\n                    </div>\n                </div></>\n        }\n    </div>)\n}\n\nexport default UserPage;","import axios from 'axios';\nimport React, {useState} from 'react'\nimport {Modal, Alert, Spinner} from 'react-bootstrap'\n\nlet ChangePass = props => {\n    let [isLoading, setLoading] = useState(false);\n    let [isValid, setValid] = useState(false);\n    let [isSuccess, setSuccess] = useState(false);\n    let [data, setData] = useState({\n        oldPassword: '',\n        newPassword: ''\n    });\n    let handleUserInput = ev => {\n        setValid((!!data.oldPassword) && (!!data.newPassword))\n        setData({\n            ...data,\n            [ev.currentTarget.name]: ev.currentTarget.value\n        })\n    }\n    let changePass = () => {\n        setLoading(true)\n        axios({\n            url: \"/auth/pass/change\",\n            method: \"put\",\n            data: data\n        }).then(res => {\n            setLoading(false)\n            setSuccess(true);\n        }).catch(err => {\n            throw err;\n        })\n    }\n    let closeModal = () => {\n        setSuccess(false);\n        props.close()\n    }\n    return (<Modal show={props.show}>\n        <Modal.Header>\n            <h4 className=\"modal-title\">Warning</h4><button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={closeModal}><span aria-hidden=\"true\">×</span></button>\n        </Modal.Header>\n        <Modal.Body>\n            {\n                isSuccess ? <Alert variant=\"success\"><h1>Success!</h1>Your password was changed successfully.<p></p></Alert> : <><div className=\"alert alert-danger\" role=\"alert\">\n                    <h1 className=\"text-center\">Warning</h1><span>Changing your password is pretty dangerous. Are you sure you want to do so? <strong>Write your current password below and press continue to proceed.</strong></span></div>\n                    <div className=\"form-entry\"><input value={data.oldPassword} name=\"oldPassword\" onChange={handleUserInput} type=\"text\" placeholder=\"Old password\" /></div>\n                    <div className=\"form-entry\"><input value={data.newPassword} name=\"newPassword\" onChange={handleUserInput} type=\"text\" placeholder=\"New password\" /></div></>\n            }\n            \n        </Modal.Body>\n        <Modal.Footer>\n            <button className=\"btn btn-light\" type=\"button\" data-dismiss=\"modal\" onClick={closeModal}>Cancel</button><button onClick={changePass} className=\"btn btn-danger\" type=\"button\" disabled={(!isValid) || isSuccess}>{isLoading ? <Spinner animation=\"border\"></Spinner> : \"Continue\"}</button>\n        </Modal.Footer>\n    </Modal>)\n}\n\nexport default ChangePass;","import React, {useEffect, useState} from 'react'\nimport { Card, Nav, Tooltip, OverlayTrigger, Alert, Button, Spinner} from 'react-bootstrap'\nimport axios from 'axios'\nimport ChangePass from './ChangePass'\n\nlet HelpIcon = mainProps => {\n    return (<OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={props => {\n            return (<Tooltip id=\"help-tooltip\" {...props}>\n                {mainProps.text}\n            </Tooltip>)\n        }}\n    ><i className=\"fa fa-question-circle-o help-badge\" /></OverlayTrigger>)\n}\nlet ProfileSubmenu = props => {\n    if (props.menu == \"general\") {\n        return (<><div className=\"profile-entry\">\n            <h1 className=\"h-100\">Name\n            <HelpIcon text=\"Your full name\" />\n            </h1><input name=\"name\" value={props.user.name} onChange={props.handleUserInput} type=\"text\" className=\"new-post-in\" /></div>\n            <div className=\"profile-entry\">\n                <h1 className=\"h-100\">Email\n                <HelpIcon text=\"Your main email address\" />\n                </h1><input name=\"email\" value={props.user.email} onChange={props.handleUserInput} type=\"text\" className=\"new-post-in\" /></div>\n            <div className=\"profile-entry\">\n                <h1 className=\"h-100\">Username\n                <HelpIcon text=\"The name you will provide when logging in\" />\n                </h1><input name=\"username\" value={props.user.username} onChange={props.handleUserInput} type=\"text\" className=\"new-post-in\" /></div></>)\n    }\n    if (props.menu == \"description\") {\n        return (<><div className=\"form-entry\">\n            <h1>Bio<HelpIcon text=\"A short description of yourself\" /></h1><textarea name=\"bio\" onChange={props.handleUserInput} defaultValue={props.user.bio} /></div></>)\n    }\n    if (props.menu == \"password\") {\n        return (<>\n            <div className=\"setting-change-btn\"><button onClick={props.startChangePass} className=\"btn btn-danger w-100\" type=\"button\">Change Password<i className=\"fa fa-question-circle-o help-badge\" /></button></div>\n        </>)\n    }\n    return null\n}\nlet ProfilePage = () => {\n    let [isSuccess, setSuccess] = useState(false);\n    let [isFailed, setFailed] = useState(false);\n    let [isLoading, setLoading] = useState(true);\n    let [isSubmitting, setSubmitting] = useState(false);\n    let [passwordModal, setPasswordModal] = useState(false);\n    let [user, setUser] = useState({\n        name: '',\n        username: '',\n        email: '',\n        bio: ''\n    });\n    let saveProfile = () => {\n        setSubmitting(true)\n        axios({\n            url: \"/users/self\",\n            method: \"put\",\n            data: user\n        }).then(res => {\n            setSuccess(true);\n            setFailed(false);\n            setSubmitting(false)\n        }).catch(err => {\n            setSuccess(false);\n            setFailed(true);\n            setSubmitting(false)\n            throw err;\n        })\n    }\n    useEffect(() => {\n        setLoading(false)\n        axios({\n            url: \"/users/me\",\n            method: \"get\"\n        }).then(res => {\n            res.data.bio = res.data.bio.md; // don't care about html\n            setUser(res.data)\n        }).catch(err => {\n            throw err;\n        })\n    }, [])\n    let handleUserInput = ev => {\n        setUser({\n            ...user,\n            [ev.currentTarget.name]: ev.currentTarget.value\n        })\n    }\n    let changePass = () => {\n        axios({\n            url: \"/users/password/change\",\n            method: \"put\"\n        }).then(res => {\n\n        })\n    }\n    let [openMenu, setOpenMenu] = useState('general')\n    let navClicked = ev => {\n        setOpenMenu(ev.currentTarget.name)\n    }\n    return (<div>\n        <header>\n            <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(63,108,118)' }}>\n                <h1 className=\"text-center\" style={{ color: '#FFFFFF' }}>Your Profile</h1>\n            </div>\n        </header>\n        <div className=\"container\">\n            {\n                isLoading ? <Spinner animation=\"border\"></Spinner> : <Card>\n                    <Card.Header>\n                        <Nav variant=\"tabs\" activeKey={openMenu}>\n                            <Nav.Item>\n                                <Nav.Link name=\"general\" eventKey=\"general\" onClick={navClicked}>General</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link name=\"description\" eventKey=\"description\" onClick={navClicked}>Description</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link name=\"password\" eventKey=\"password\" onClick={navClicked}>Password</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </ Card.Header>\n                    <Card.Body>\n                        <ProfileSubmenu startChangePass={() => {setPasswordModal(true)}} user={user} handleUserInput={handleUserInput} menu={openMenu} />\n                        <div className=\"d-flex\"><Button onClick={saveProfile} className=\"w-100\"><i className=\"fa fa-check-square-o p-1\" />{isSubmitting ? <Spinner animation=\"border\"></Spinner> : \"Save Changes\"}</Button></div>\n                        {isSuccess ? <Alert className=\"profile-status-alert\" variant=\"success\">\n                            <h1>Changes Saved</h1>\n                            <p>Your changes were sucessfully saved!</p>\n                        </Alert> : null}\n                        {isFailed ? <Alert className=\"profile-status-alert\" variant=\"danger\">\n                            <h1>Error</h1>\n                            <p>An error occured and your changes could not be saved. Please contact\n                            your administrator.</p>\n                        </Alert> : null}\n                    </Card.Body>\n                </Card>\n            }\n        </div>\n        <ChangePass close={() => {setPasswordModal(false)}} show={passwordModal} />\n    </div>)\n}\n\nexport default ProfilePage;","import React from 'react';\nimport './App.css';\nimport Home from \"./components/home\"\nimport Navbar from './components/general/navbar'\nimport Footer from './components/general/footer'\nimport NotFound from \"./components/not-found\"\nimport Login from \"./components/login\"\nimport Cp from \"./components/cp\"\nimport AllPosts from \"./components/all-posts\"\nimport LogoutConf from \"./components/log-out-confirmation\"\nimport axios from 'axios'\nimport Post from './components/Post'\nimport NewPost from './components/NewPost'\nimport PostCreated from \"./components/PostCreated\"\nimport LoadingOverlay from \"./components/general/LoadingOverlay\"\nimport ProtectedRoute from './components/general/ProtectedRoute'\nimport \"./assets/css/conn-lost.css\"\nimport \"./assets/css/all-authors.css\"\nimport \"./assets/css/view-author.css\"\nimport \"./assets/css/profile.css\"\nimport LostConn from \"./components/general/LostConn\"\nimport FatalError from \"./components/general/FatalError\"\nimport EditPost from './components/EditPost'\nimport AllUsers from './components/AllUsers'\nimport NewUser from './components/NewUser'\nimport EditUser from \"./components/EditUser\"\nimport AllAuthors from \"./components/AllAuthors\"\nimport UserPage from \"./components/UserPage\"\nimport ProfilePage from \"./components/Profile\"\n\nimport {\n  Switch,\n  HashRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\nfunction App() {\n  let [isLoggedIn, setLoggedIn] = React.useState(null);\n  let [isConnected, setIsConnected] = React.useState(true);\n  let [isCrashed, setCrashed] = React.useState(false);\n  /* TODO: Make admin vs non-admin */\n  let [isAdmin, setAdmin] = React.useState(false);\n  let [isLoadingOverlay, setLoadingOverlay] = React.useState(false)\n  return (\n    <div className=\"App\">\n      {isConnected ? null : <LostConn />}\n      {isLoadingOverlay ? <LoadingOverlay /> : null}\n      <Router>\n        {isCrashed ? <FatalError setCrashed={setCrashed} /> : null}\n        <Navbar isLoggedIn={isLoggedIn} setLoggedIn={setLoggedIn}></Navbar>\n          <Switch>\n            <Route exact={true} path=\"/\">\n              <Home setIsConnected={setIsConnected}></Home>\n            </Route>\n            <Route path=\"/login\">\n              <Login isLoggedIn={isLoggedIn} setLoggedIn={setLoggedIn}></Login>\n            </Route>\n            <Route path=\"/logout\">\n              <LogoutConf isLoggedIn={isLoggedIn} setLoggedIn={setLoggedIn}></LogoutConf>\n            </Route>\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/cp\" render={(props) => (<Cp {...props}/>)} />\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/posts/all\" render={props => {\n              return (<AllPosts {...props} setLoggedIn={setLoggedIn}></AllPosts>)\n            }} />\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/posts/new\" render={(props) => {\n              return (<NewPost {...props} setLoadingOverlay={setLoadingOverlay}></NewPost>)\n            }}/>\n            <Route path=\"/posts/created\">\n              <PostCreated></PostCreated>\n            </Route>\n            <Route path=\"/posts/edit/:id\">\n              <EditPost setLoadingOverlay={setLoadingOverlay}/>\n            </Route>\n            <Route path=\"/posts/:id\">\n              <Post setCrashed={setCrashed}></Post>\n            </Route>\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/users/all\" render={props => {\n              return (<AllUsers {...props} />)\n            }} />\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/users/new\" render={props => {\n              return (<NewUser {...props} setLoadingOverlay={setLoadingOverlay}/>)\n            }} />\n            <Route path=\"/users/view\"> \n              <AllAuthors />\n            </Route>\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/users/edit/:id\" render={props => {\n              return (<EditUser {...props} setLoadingOverlay={setLoadingOverlay}/>)\n            }} />\n            <ProtectedRoute isLoggedIn={isLoggedIn} path=\"/users/me\" render={props => {\n              return (<ProfilePage {...props}/>)\n            }} />\n            <Route path=\"/users/:id\">\n              <UserPage />\n            </Route>\n            <Route>\n              <NotFound></NotFound>\n            </Route>\n        </Switch>\n        <Footer></Footer>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}